version: '3.9'

services:
  postgres:
    image: postgres:15.6
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - INTERNAL_PORT=${INTERNAL_PORT}
      - EXTERNAL_PORT=${EXTERNAL_PORT}
      - MIGRATION_VERSION=1.2.1
    volumes:
      - ./start.sh:/docker-entrypoint-initdb.d/start.sh
      - ./migrations:/app/migrations
      - ./users.txt:/app/users.txt
    ports:
      - "${EXTERNAL_PORT}:${INTERNAL_PORT}"
    restart: unless-stopped

  indexing:
    image: python:3.9
    command: sh -c "pip install -r /app/requirements.txt && python /app/runner.py"
    volumes:
      - ./requirements.txt:/app/requirements.txt
      - ./runner.py:/app/runner.py
      - ./optimization/create_indexes.sql:/app/create_indexes.sql
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PORT=${INTERNAL_PORT}
      - FILE=create_indexes.sql

  generation:
    image: python:3.9
    command: sh -c "pip install -r /app/requirements.txt && python /app/datageneration.py"
    volumes:
      - ./requirements.txt:/app/requirements.txt
      - ./generation/:/app/generation
      - ./datageneration.py:/app/datageneration.py
    depends_on:
      - indexing
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PORT=${INTERNAL_PORT}
      - AMOUNT=10

  backups:
    image: postgres:15.6
    command: sh -c "/app/backup.sh"
    volumes:
      - ./backups:/app/backups
      - ./backup.sh:/app/backup.sh
    depends_on:
      - generation
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PORT=${INTERNAL_PORT}
      - N=${N}
      - M=${M}
      - BACKUP_DIR=${BACKUP_DIR}

  analyzer:
    image: python:3.9
    command: sh -c "pip install -r /app/requirements.txt && python /app/analyzer.py"
    volumes:
      - ./requirements.txt:/app/requirements.txt
      - ./QueryAnalyzer:/app
    depends_on:
      - backups
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - PORT=${INTERNAL_PORT}
      - QUERY_TRIES=10
